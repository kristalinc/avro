##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##

## Modifications by Duane Moore, Clover, Aug 2013

#if ($schema.getNamespace())
package $schema.getNamespace();
#end

#if ($schema.getDoc())
/** $schema.getDoc() */
#end
#foreach ($annotation in $this.javaAnnotations($schema))
@$annotation
#end
public class ${this.mangle($schema.getName())}  {

#foreach ($field in $schema.getFields())
  #foreach ($annotation in $this.javaAnnotations($field)) @$annotation #end
  private ${this.javaUnbox($field.schema())} ${this.mangle($field.name(), $schema.isError())};
#end

#if ($schema.getFields().size() > 0)

  public ${this.mangle($schema.getName())}() {}

  public ${this.mangle($schema.getName())}(#foreach($field in $schema.getFields())${this.javaType($field.schema())} ${this.mangle($field.name())}#if($velocityCount < $schema.getFields().size()), #end#end) {
  #foreach ($field in $schema.getFields())
    this.${this.mangle($field.name())} = ${this.mangle($field.name())};
  #end
  }
#end

#foreach ($field in $schema.getFields())
  #if ($field.doc())
  /**
  * $field.doc()
  */
  #end
  public ${this.javaType($field.schema())} ${this.generateGetMethod($schema, $field)}() {
    return ${this.mangle($field.name(), $schema.isError())};
  }

#if (${this.isCreateSetters()})
  public void ${this.generateSetMethod($schema, $field)}(${this.javaType($field.schema())} ${this.mangle($field.name(), $schema.isError())}) {
    ${this.generateValidityCheck($field, ${this.mangle($field.name(), $schema.isError())})}
    this.${this.mangle($field.name(), $schema.isError())} = ${this.mangle($field.name(), $schema.isError())};
  }
  #end
#end

}
